name: Continuous Integration Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Check Rust version
      run: cargo --version && rustc --version
    - name: Add rustfmt
      run: rustup component add rustfmt
    - name: Check Rust format
      run: cargo fmt -- --check
    # Gives us extra features for organizing imports
    - name: Add rustfmt nightly
      run: rustup +nightly component add rustfmt
    - name: Check Rust format nightly
      run: cargo +nightly fmt -- --config-path rustfmt-nightly.toml --check

  clippy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Check Rust version
      run: cargo --version && rustc --version
    - name: Add clippy
      run: rustup component add clippy
    - name: Check clippy
      run: cargo clippy --all-targets -- -Dwarnings

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Check Rust version
      run: cargo --version && rustc --version
    - name: Build Debug
      run: cargo build --verbose
    - name: Build Release
      run: cargo build --release --verbose

  unit-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Check Rust version
      run: cargo --version && rustc --version
    - name: Run unit tests
      run: cargo test --bins

  integration-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Check Rust version
      run: cargo --version && rustc --version
    - name: Run integration tests
      run: cargo test --test integration
