# Syntax reference:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
name: System Tests in Shadow

on:
  push:
    branches: main
  pull_request:
    branches: main

env:
  CARGO_TERM_COLOR: always
  DEBIAN_FRONTEND: noninteractive
  # End of standard support: June 2029 https://wiki.ubuntu.com/Releases
  # Keep consistent with the 'runs-on' directives (we cannot access env variables in those).
  IMAGE: ubuntu-24.04
  # The following are the latest as of 2025-05-20.
  SHADOW_REF: 7574ca106d0188f95660c8acf60cf0de6de167a5
  TGEN_REF: 816d68cd3d0ff7d0ec71e8bbbae24ecd6a636117
  TOR_REF: tor-0.4.8.16

jobs:
  build-dependencies:
    name: Build test dependencies

    runs-on: ubuntu-24.04

    steps:
    - name: Check cache
      id: cache
      uses: actions/cache@v4
      with:
        path: opt
        key: cache-key-${{ env.IMAGE }}-${{ env.SHADOW_REF }}-${{ env.TGEN_REF }}-${{ env.TOR_REF }}
        lookup-only: true

    - name: Clone Shadow
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: shadow/shadow
        ref: ${{ env.SHADOW_REF }}
        path: shadow

    - name: Install Shadow build dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        sudo apt update
        sudo apt install -y \
          cmake \
          findutils \
          libclang-dev \
          libc-dbg \
          libglib2.0-0 \
          libglib2.0-dev \
          make \
          netbase \
          python3 \
          xz-utils \
          util-linux \
          gcc \
          g++

    - name: Build and install Shadow
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: shadow
      run: |
        ln -s ci/rust-toolchain-stable.toml rust-toolchain.toml
        rustup toolchain install
        cargo --version
        rustc --version
        python3 setup build --jobs 4 --prefix "$GITHUB_WORKSPACE/opt"
        python3 setup install

    - name: Clone TGen
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: shadow/tgen
        ref: ${{ env.TGEN_REF }}
        path: tgen

    - name: Install TGen build dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        sudo apt update
        sudo apt install -y cmake libglib2.0-dev libigraph-dev

    - name: Build and install TGen
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: tgen
      run: |
        cmake . -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/opt"
        make -j4
        make install

    - name: Clone Tor
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        sudo apt install -y git
        git clone https://gitlab.torproject.org/tpo/core/tor.git
        cd tor
        git checkout ${{ env.TOR_REF }}

    - name: Install Tor build dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        sudo apt update
        sudo apt install -y \
          autoconf \
          automake \
          gcc \
          libevent-dev \
          libssl-dev \
          make \
          zlib1g-dev 

    - name: Build and install Tor
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: tor
      run: |
        ./autogen.sh
        ./configure --disable-asciidoc --disable-unittests --prefix="$GITHUB_WORKSPACE/opt"
        make -j4
        make install

  test-proteus:
    name: Run system tests

    needs: build-dependencies

    runs-on: ubuntu-24.04

    steps:
    - name: Restore cache
      id: cache
      uses: actions/cache@v4
      with:
        path: opt
        key: cache-key-${{ env.IMAGE }}-${{ env.SHADOW_REF }}-${{ env.TGEN_REF }}-${{ env.TOR_REF }}
        fail-on-cache-miss: true

    - name: Install runtime dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          libglib2.0-0 \
          libigraph-dev \
          libevent-dev \
          libssl-dev \
          zlib1g
        echo "$GITHUB_WORKSPACE/opt/bin" >> $GITHUB_PATH

    - name: Check Shadow version
      run: shadow --show-build-info

    - name: Check Tor version
      run: tor --version

    - name: Clone Proteus
      uses: actions/checkout@v4
      with:
        path: proteus

    - name: Install Rust toolchain
      working-directory: proteus
      run: rustup toolchain install

    - name: Check Rust version
      working-directory: proteus
      run: cargo --version && rustc --version

    - name: Build Proteus
      working-directory: proteus
      run: cargo build --release --verbose

    - name: Test Proteus
      working-directory: proteus
      run: cargo test --release --test system -- --test-threads 1 --ignored
